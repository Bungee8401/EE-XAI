--------------- 31.Jan 2025 ---------------------
TODO: No sequence, only list

1. find_thresh -> train_loader in threshold finder
    SOLVED

2. exit0 -> exit 2345
    right now only optimized at exit 0, test if imgs can still be classified right in exit 2,3,4,...
    TODO: SOLVED
        a) set exit 0 confidence to 0 -> disabling the first branch
        b) test again to see if the imgs can be classified correctly
    SOLVED

3. complexity of classifier and generator test
    e.g., cat, can exit at exit 0 but can not be classified correctly.
    question is, can this gen_cat img be classified correctly at exit 1,2,...?
        if yes, then the classifier's feature extraction ability for this class is not enough at first conv layer
            i.e., this hard class needs more layers in the classifier -> the classifier complexity is not enough
        if no until the last exit position
            the generator complexity is not enough
    SOLVED

4. gen_A - A = diff_A, add diff_A to other class imgs to see if they are influenced
    i should expect a yes in the result.
    e.g. diff of airplane add to truck, if truck then classified into airplane, jack pot!


5. 32*32 generator net -> 224*224 generator net
    SOLVED


------------------ 03.Feb 2025 ----------------------

generator224 gen_imgs can be classified correctly even in E1.
now problem is, how to fine tune the cls_loss, i.e. how to not overshoot:
TODO:
    1. crop edge of gen_imgs, test -> no, EE depends heavily on the edge patterns
            -> since the problem here is the EE, which is controlled by EE_loss
                try modifying the EE_loss to really find the EE features -> - now, by torch.mean(all exits confidence)
    2. torch.mean(five exits) give models that
        a) correct wrong labels
        b) maintain EE (1 later, 1 early)
        -> it is the patterns in the corner that 'force' imgs to exit earlier
        -> generative models may by nature cannot generate EE patterns
    3. take a look at heat maps
    4. wrong class into correct class is def. helpful in heatmaps
    5.
    6. get in bed early

------------------ 06.Feb 2025 ----------------------
build an early version of Grad CAM, not sure if everything is working properly, further test needed

below are reports for 07.Feb:

Brief summary:
1. Generator32 model complexity testing, issues found
2. build Generator224 model, gen_imgs now can be properly classified
3. use Generator224 to do Early Exit feature search, issues found
4. building grad-CAM to verify my guess

Details:
1. Generator32 :
    a) for easy class
        - exits early at E0
        - all classified correct as airplane
        - even can correct wrong classified imgs
    b) for hard class
        - cannot classify imgs correctly at E0
        - have to delay exit layer to make sure the classification is correct

    -> which means, the complexity of this generator is not enough for my needs.
       I upgrade the scale of the generator to let it generate 224*224 imgs for higher resolution

2. Generator224 :
    a) easy and hard class all perform well
        - gen_imgs can be classified correctly and exit the network early (mostly E0, hard class at E1)

    b) two examples below to demonstrate

        # 0 airplane, 100 epoch, original vs gen       ---- easy class, most at E0

        ----Test Exit Location: [[0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0]]
        Original Exit Location: [[1, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 4, 1, 2, 3, 1, 1, 1, 1, 4, 2, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0, 0, 1, 2, 0, 2, 0, 0, 0, 5, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2, 0, 1, 1, 1, 0, 0, 0, 1, 2, 1, 0, 1, 1, 1, 2, 0, 1, 1, 3, 2, 0, 0, 2, 2, 1, 1, 0, 1, 0, 1, 2, 1, 0, 1, 0, 0, 1, 2, 0, 1, 0, 0, 3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 2, 1, 0, 0, 3, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 0, 2, 0, 1, 2, 1, 0, 0, 0, 0, 0, 2, 1, 0, 1, 1, 1, 4, 2, 0, 0, 0, 0, 2, 2, 2, 1, 2, 1, 1, 2, 0, 0, 2, 0, 1, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 2, 1, 1, 3, 1, 0, 1, 0, 1, 2, 1, 2, 0, 1, 0, 1, 4, 1, 2, 2, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 2, 0, 2, 1, 2, 1, 1, 1, 0, 1, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 1, 0, 1, 0, 1], [1, 1, 0, 2, 1, 1, 0, 0, 0, 1, 1, 2, 2, 2, 1, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 2, 2, 1, 0, 0, 2, 1, 2, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 2, 0, 0, 1, 1, 1, 0, 2, 2, 1, 0, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 2, 0, 2, 1, 1, 1, 0, 1, 3, 1, 1, 1, 1, 3, 2, 0, 1, 2, 0, 0, 1, 0, 1, 1, 0, 1, 2, 0, 0, 2, 0, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 1, 2, 2, 1, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 2, 1, 1, 2, 0, 1, 0, 1, 1, 1, 1, 2, 0, 0, 1, 0, 0, 2, 0, 0, 1, 1, 0, 3, 2, 1, 1, 1, 2, 0, 0, 1, 0, 2, 1, 1, 0, 3, 3, 1, 0, 1, 0, 1, 1, 3, 0, 0, 1, 1, 0, 1, 1, 1, 2, 2, 1, 1, 1, 0, 0, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 5], [1, 1, 0, 0, 0, 1, 1, 2, 0, 1, 0, 3, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 2, 0, 2, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 2, 0, 0, 0, 1, 1, 2, 1, 0, 2, 2, 1, 2, 0, 0, 0, 2, 2, 2, 0, 1, 2, 2, 2, 2, 3, 0, 1, 1, 2, 2, 1, 2, 0, 2, 2, 1, 0, 1, 1, 1, 0, 0, 1, 2, 1, 0, 0, 2, 1, 0, 5, 2, 1, 0, 1, 2, 1, 0, 2, 0, 0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0, 0, 2, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 0, 1, 2, 2, 0, 1, 1, 2, 0, 0, 2, 5, 2, 0, 2, 2, 0, 0, 1, 2, 0, 1, 1, 1, 2, 1, 2, 2, 0, 1, 1, 1, 0, 0, 5, 1, 1, 1, 3, 0, 0, 0, 1, 1, 0, 2, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 4, 1, 0, 0, 0, 1, 0, 1, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 3, 1, 1, 0, 0, 0, 2, 2, 2, 1, 0, 2, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 2, 1, 0, 1], [1, 0, 2, 1, 0, 2, 0, 2, 1, 2, 0, 1, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 2, 2, 0, 0, 1, 1, 1, 2, 0, 1, 2, 2, 0, 1, 2, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 2, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 1, 1, 1, 0, 2, 1, 1, 1, 0, 1, 0, 0, 2, 1, 1, 2, 1, 0, 2, 0, 0, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 2, 1, 2, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 4, 0, 1, 1, 1, 2, 0, 1, 0, 1, 2, 1, 2, 1, 2, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 2, 0, 1, 4, 1, 1, 2, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 0, 4, 0, 0, 2, 0, 0, 2, 0, 0, 3, 3, 0, 0, 0, 1, 3, 1, 1, 1, 1, 0, 1, 1, 1, 0, 2, 2, 1, 0, 1, 2, 5, 1, 1, 0, 2, 1, 1, 0, 1, 0, 0, 1, 2, 0, 1]]
        early or late: [[1, 1, 1, 0, 2, 3, 1, 1, 0, 3, 1, 0, 2, 0, 0, 1, 0, 1, -1, 1, 1, -1, 0, 5, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 2, 1, 2, 0, 1, 0, -1, 0, 1, 2, 3, 2, 1, 1, 0, 0, 2, 1, 0, 2, 0, 1, 0, 0, 0, 1, 2, 0, 1, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, -1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, -1, 1, 0, 0, 1, 0, 1, 0, 0, 2, 1, 1, 2, 0, 0, 0, 2, 0, 1, 1, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 0, 1, 1, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 2, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 1, 0, -1, 0, 3, 1, 1, 0, 0, 2, 2, 1, 1, 0, 3, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 2, 2, 0, 0, 2, -1, 0, 1, 1, 2, 2, 0, -1, 1, -2, 0, 2, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 2, 1, 2, 0, 0, 0, 1, 2, 0, 1, 2, 0, 2, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [-1, 0, 1, 3, 0, -1, 1, 0, 2, 4, 1, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1, 1, 1, 2, 0, 1, -1, 1, 2, 2, -1, 2, 2, 2, 1, 0, 1, 2, -1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 0, 0, 2, 0, -1, 2, 0, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, -1, 0, 0, 0, 0, 3, 0, 0, 2, 0, 2, 1, 2, 1, -1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 0, 1, 0, 1, -2, 1, 0, 0, 0, 1, 0, 2, 1, 2, 2, 1, 2, 1, 2, 1, 0, 2, 2, 0, 2, 1, 1, 2, 0, 1, -1, 2, 0, 1, 1, 0, 1, 2, 1, 1, 0, 1, -2, 1, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, -2, 1, 0, 0, 1, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 2, 2, -1, 0, 1, 2, 2, 1, 0, 0, 1, 5, 2, 0, 0, 1, 1, 1, 2, 2, 1, 0, 0, 0, 2, 2, 0, 0, 1, 0, 2, 1, 2, 1, 3, 2, 1, 0, 1, 0, 0, 1, 1, 0, -1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [2, 0, 1, 2, 1, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 0, 1, 2, 4, 0, 1, 0, 2, 1, 0, 1, 2, 0, 2, 1, 0, 0, -1, 0, 0, 1, 1, 1, 1, 1, 0, 3, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 2, 1, 0, 2, 4, 0, 1, 1, 0, 1, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 1, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 0, 4, 0, 1, 1, 0, 0, 1, 1, -1, 0, 0, -1, 0, 0, 1, 1, 1, 0, 1, 0, -1, 1, 1, 2, 2, 2, 0, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 0, 2, 0, 2, 1, -1, -2, 1, 0, 0, 1, 1, 1, 2, 2, 2, 0, 2, -1, 1, 0, 2, 4, 0, 1, 0, 0, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, -1, 1, -2, 4, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 1, 0, 4, 1, 1, 3, 1, 2, 1, 0, 2, 2, 2, 1, 2, 0, 1, 3, 0, 1, 0, 2, 1, 0, 1, 1, 3, 1, 0, 0, 1, 0, 1, 1, 2, 0, -2, 0, 0, 0, 2, 2, 2, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 2, 0, 3, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, -2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 4, 0, 2, 0, 0, 5, 2, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 3, 1, 0, 1, 2, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 2, 1, 2, 0, 1, 1, 0, 1, 2, 1, 0, 1, 1, 0, 1, 0, -1, 1, 0, 1, 2, 0, 0, 2, 0, 1, 1, 1, 0, 1, 0, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 2, 0, 2, 3, 2, 1, 1, 0, 0, 0, 0, 1, 2, 1, 1, -3, -1, 1, 0, 0, 2, 5, 1, 0, 0, 2, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 2, 2, 1, 1, 2, 1, 2, 1, 0, 0, 2, 0, 0, 0, 1, 1, 4, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 2, 0, 1, 1, 1, 0, 2, 1, 1, -1, -1, 0, 3, 0, 5, 0, 3, 0, 1, 2, 2, 0, 0, 0, 0, 1, 1, 0]]

        negative count: 39 of 1000
        positive count: 597 of 1000
        maintain count: 364 of 1000

        # 3 cat, 200 epoch, original vs gen            ---- hard class, most at E1

        ----Test Exit Location: [[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]
        Original Exit Location: [[1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 5, 2, 3, 3, 0, 1, 2, 2, 2, 2, 0, 2, 3, 1, 1, 2, 0, 1, 2, 1, 1, 1, 1, 2, 2, 4, 1, 2, 0, 3, 4, 2, 1, 2, 1, 2, 2, 0, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 0, 1, 1, 1, 2, 1, 2, 1, 3, 1, 0, 2, 3, 2, 3, 2, 2, 1, 1, 1, 1, 0, 1, 2, 4, 3, 1, 1, 2, 0, 1, 1, 1, 1, 0, 2, 0, 2, 0, 1, 2, 2, 1, 0, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1, 0, 1, 2, 0, 2, 1, 1, 2, 2, 2, 2, 1, 1, 3, 1, 3, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 1, 2, 1, 2, 4, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 3, 1, 4, 2, 1, 5, 2, 1, 0, 3, 1, 1, 0, 2, 1, 1, 0, 3, 2, 2, 2, 1, 1, 1, 2, 1, 0, 2, 0, 1, 2, 2, 2, 1, 0, 1, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 5, 1, 1, 2, 1, 2, 2], [2, 2, 1, 3, 2, 2, 0, 1, 3, 0, 2, 2, 1, 1, 0, 1, 1, 2, 0, 1, 0, 2, 2, 0, 1, 1, 1, 1, 1, 2, 1, 2, 5, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 0, 2, 1, 2, 0, 2, 1, 5, 2, 2, 1, 1, 1, 1, 1, 2, 1, 4, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 3, 1, 2, 2, 2, 2, 3, 1, 2, 2, 2, 2, 3, 1, 1, 2, 2, 3, 2, 2, 1, 1, 0, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 3, 1, 1, 2, 2, 2, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 2, 1, 2, 1, 0, 1, 1, 2, 3, 1, 1, 2, 1, 0, 1, 4, 1, 2, 1, 1, 2, 1, 0, 2, 2, 1, 1, 2, 1, 0, 1, 2, 2, 2, 3, 1, 3, 2, 2, 2, 1, 2, 1, 5, 1, 1, 2, 2, 3, 1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 2, 1, 1, 2, 5, 2, 1, 2, 1, 4, 2, 1, 2, 0, 1, 1, 4, 2, 1, 2, 3, 1, 1, 0, 1, 2, 1, 2, 2, 1, 2, 2, 1, 0, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 2, 3, 2, 1, 0, 1, 2, 1, 0, 3, 2, 1, 2, 3, 1], [1, 4, 3, 2, 5, 0, 1, 0, 2, 4, 2, 1, 2, 2, 1, 1, 2, 0, 3, 1, 0, 1, 1, 5, 1, 1, 1, 1, 1, 1, 2, 0, 4, 3, 3, 2, 1, 0, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 0, 2, 2, 2, 2, 1, 2, 1, 1, 0, 2, 2, 2, 1, 2, 1, 2, 0, 1, 0, 1, 1, 2, 2, 3, 5, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 0, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 5, 1, 1, 3, 1, 1, 0, 5, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 5, 2, 2, 1, 2, 1, 3, 1, 0, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 3, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 0, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 3, 1, 2, 1, 0, 1, 2, 1, 1, 1, 1, 1, 3, 1, 1, 2, 0, 2, 0, 3, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 0, 2, 1, 3, 0, 1, 1, 3, 1, 1, 2, 2, 1, 1, 2, 1, 1, 5, 2, 1, 0, 3, 2], [1, 2, 5, 2, 3, 1, 1, 0, 1, 0, 1, 2, 2, 3, 1, 2, 1, 1, 1, 2, 1, 2, 0, 1, 1, 2, 0, 2, 1, 2, 1, 3, 0, 0, 1, 1, 2, 4, 2, 0, 2, 1, 1, 1, 2, 0, 3, 1, 0, 1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 0, 1, 2, 2, 1, 5, 1, 0, 1, 1, 1, 2, 1, 1, 2, 3, 1, 3, 2, 1, 2, 5, 2, 1, 1, 4, 1, 1, 3, 2, 2, 1, 1, 4, 1, 2, 1, 0, 2, 1, 2, 2, 3, 2, 0, 3, 1, 2, 1, 2, 0, 1, 2, 2, 2, 2, 5, 2, 1, 1, 1, 4, 3, 3, 1, 2, 2, 1, 0, 2, 2, 1, 1, 0, 1, 2, 2, 0, 1, 0, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 0, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 3, 2, 2, 4, 0, 2, 4, 2, 0, 2, 2, 1, 1, 2, 4, 5, 2, 1, 1, 1, 2, 0, 1, 1, 1, 2, 2, 4, 2, 2, 2, 2, 2, 1, 5, 1, 1, 5, 3, 0, 2, 2, 2, 2, 1, 1, 1, 1, 2, 3]]

        early or late: [[1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 5, 2, 3, 3, 0, 1, 2, 2, 2, 2, 0, 2, 3, 1, 1, 2, 0, 1, 2, 1, 1, 1, 0, 2, 2, 4, 1, 2, 0, 3, 4, 2, -1, 2, 1, 2, 2, 0, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 0, 1, 2, 1, 2, 2, 2, 0, 1, 1, 1, 2, 1, 2, 1, 3, 1, 0, 2, 3, 2, 3, 2, 2, 1, 1, 1, 1, 0, 1, 2, 4, 3, 1, 1, 2, -1, 1, 1, 1, 1, 0, 2, 0, 2, 0, 1, 2, 2, 1, 0, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1, 0, 1, 2, 0, 2, 1, 1, 1, 2, 2, 2, 1, 1, 3, 1, 3, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 0, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 2, 4, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 3, 1, 4, 2, 1, 5, 2, 1, 0, 3, 0, 1, 0, 2, 1, 1, 0, 3, 2, 2, 2, 1, 1, 1, 2, 1, 0, 2, 0, 1, 2, 2, 2, 1, 0, 1, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 1, 0, 1, 1, 2, 2, 2, 5, 1, 1, 2, 1, 2, 2], [2, 2, 1, 3, 2, 2, 0, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 2, 0, 1, 0, 2, 2, 0, 1, 1, 1, 1, 1, 2, 1, 1, 5, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 0, 2, 1, 2, 0, 2, 1, 5, 2, 2, 1, 1, 1, 1, 1, 2, 1, 4, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 3, 1, 2, 2, 2, 2, 3, 1, 2, 2, 2, 2, 3, 1, 1, 2, 2, 3, 2, 2, 1, 1, -1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 3, 1, 0, 2, 2, 2, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 2, 1, 4, 1, 1, 2, 1, 1, 2, 1, 2, 1, 0, 1, 0, 2, 3, 1, 1, 2, 1, 0, 1, 4, 1, 2, 1, 1, 2, 1, 0, 2, 2, 1, 1, 2, 1, 0, 1, 2, 2, 2, 3, 1, 3, 2, 2, 2, 1, 2, 1, 5, 1, 0, 2, 2, 3, 1, 2, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 1, 2, 5, 2, 1, 2, 1, 4, 2, 1, 2, 0, 1, 1, 4, 2, 1, 2, 3, 1, 1, 0, 1, 2, 1, 1, 2, 1, 2, 2, 1, 0, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 2, 3, 2, 1, 0, 1, 2, 1, 0, 3, 2, 1, 2, 3, 1], [1, 4, 3, 2, 5, 0, 1, 0, 2, 3, 2, 1, 2, 2, 1, 1, 1, 0, 3, 1, 0, 1, 1, 4, 1, 1, 1, 1, 1, 1, 2, 0, 4, 2, 3, 2, 1, 0, 1, 1, 1, 2, 2, 0, 2, 2, 1, 2, 1, 0, 2, 2, 2, 2, 1, 2, 1, 1, 0, 2, 2, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 2, 2, 3, 4, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 0, 1, 1, 1, 2, 1, 2, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 5, 1, 1, 3, 1, 1, 0, 5, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 5, 2, 2, 1, 2, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 2, 1, 2, 3, 2, 2, 2, 2, 1, 2, 0, 2, 2, 2, 0, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 3, 1, 2, 1, 0, 1, 2, 1, 1, 1, 1, 1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 1, 1, 2, 1, 1, 2, 2, 1, 1, 0, 2, 1, 3, 0, 1, 1, 3, 1, 1, 1, 2, 1, 1, 2, 1, 1, 5, 2, 1, 0, 3, 2], [1, 2, 5, 2, 3, 1, 1, 0, 1, 0, 1, 2, 2, 3, 1, 1, 0, 1, 1, 2, 1, 2, 0, 1, 1, 2, 0, 2, 0, 2, 1, 3, 0, -1, 1, 1, 2, 4, 2, 0, 2, 1, 1, 1, 2, 0, 3, 1, 0, 0, 1, 1, 1, 1, 0, 1, 3, 2, 2, 2, 0, 1, 2, 2, 1, 5, 1, 0, 1, 1, 1, 1, 1, 1, 2, 3, 1, 3, 2, 1, 2, 5, 2, 1, 1, 4, 0, 1, 3, 2, 2, 1, 1, 4, 1, 1, 1, 0, 2, 1, 2, 2, 3, 2, 0, 3, 1, 1, 1, 2, 0, 1, 2, 2, 2, 2, 5, 2, 1, 1, 1, 4, 2, 3, 1, 2, 2, 1, 0, 2, 2, 1, 1, -1, 1, 1, 2, 0, 1, 0, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 0, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 3, 2, 2, 4, 0, 2, 4, 2, 0, 2, 2, 1, 1, 2, 4, 5, 2, 1, 1, 1, 2, 0, 1, 1, 1, 2, 2, 4, 2, 2, 2, 2, 2, 1, 5, 1, 1, 5, 3, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3]]
        negative count: 5 of 1000
        positive count: 884 of 1000
        maintain count: 111 of 1000

3. EE feature (edge pattern test)

    a) edge pattern relation with exit_loss parameter
        150~250 * exit_loss     - almost no edge pattern, also can only roughly maintain EE
        500 * exit_loss         - mostly at E0 and correctly classified

    b) cropping to test the patterns relation with EE
        - from 5 pixels, to 15 pixels (till patterns are cropped)
        - gen_imgs exit from E0 to E1/E2 (which is mostly the where original imgs exit

        -> clearly, they are related.
        -> use Grad CAM to verify if the edges are what the major contribution here

4. Grad CAM result

    a) Grad CAM is not finished, for now just a demonstrate toy
        - gradient channels are way more than 3 RGB channels

    b) for now, edgy pattern seems not sensitive to Grad CAM
        - furthur test needed

------------------ 20.Feb 2025 ----------------------

I took some days off to consider the PhD offer and relax. Kingdom Come Deliverance 2 is such a good game!


Things I need to do today:

1. review whats been done
    Generator224, cats can be classified correctly and exit early -> a few pictures
    Grad-CAM, cropping, to test the edge -> results list

2. whats next?
    furthur testing, replace edge pixels to white, black, etc to see influence

3. try to prove that,
    EE features are not changable and transferable
    they exist in the pictures for sure, but highly relatable to objects

4. convince that I start to implement everything on RISC-V



Reports:

1. brief review
    BranchAlexnet
    Generator224
    Grad-CAM

2. now in EE feature verification
    crop & replace
        -> significantly influence the EE position and classification acc
        examples:
            1) crop from 0-20;
            2) replace from 0-20;
            3) replace & crop also applied to original image
                cropping from 30 above is unsafe.

    cross class test
        -> even trained with cat/airplane, generator224 can still force other class into cat/airplane

    tests can conclude:
        Entropy early-exit criteria in classifier, is probably not suitable for measuring loss
        Shortcut learning, deceives the classifier, may contain the EE features
        new methods needs to bring back the generator model to the object, instead of irrelevant backgrounds

4. What could be done later
    Transformer + Attention model to try to generate real EE features
    BUT! the best we can expect, is that the model can modify some local parts of an img to make it exit early
           e.g. in cat, fur texture, eyes, face texture etc.

    -> which means, pictures cannot exit early without a certain change in some parts


------------------26.02 Feb 2025---------------------

Prove that, why generator224 is not really capturing the real EE features of an object
    -> whether an object can EE or not, depends mostly on the edge now


1. feed only edge
    center part is left only white/black/gray
    result analysis: (train on 0, test on 8)

    - exit mainly at 5
    - img has to exit the network at 5th exit point, meaning only the edge is not enough for the classifier
    - in Branch Alexnet, the main exit's acc is around 55% in trainset, 33% in validation set
    - exit at earlier location means, the classifier believes it has at least
            [87.81, 86.35, 74.49, 69.43, 71.68, 33.65] acc to be correct

2. subtract ori and gen
    not analyzable. no pattern found


------------------27.02 Feb 2025---------------------

1. replace sigmoid to tanh in generator last layer
    [0,1] -> [-1, 1]
    gen_imgs show to be exibit less edgy patterns and preserve EE, label correction

2. newly trained cat generator seem to behave more stably in background
    - label correction ability comes from GAN's classifier, where I have cls_loss in the loss_fuction

    - label correction may not fundamentally improve the classifier's performance on cat class,
        it could only found some close pattern to cat class

    - feed other 9 class to Generator 3, the "label correction" performance varies
        meaning, very likely, that those classes affected the most,
            have similar features after the conv1 layer
            e.g., cat & dog, cat & deer, etc

3. the diff
    - diff has a clear cat, alwasy result in a better exit location


------------------02.03 Feb 2025---------------------

Generator224 with VGG16
- gen_imgs all have the same cat structure, still short cut learning

Generator224 with Resnet50
- not working properly

GradCAM set up, read some tutorials of Captum

TODO: use mask to control the generator

------------------03.03 Feb 2025---------------------

Meeting
- recent work report
- controlled region update in generator
- possible PhDs suggestions

        1. 在德国读博体验如何，跟硕士有什么不同
        2. 达姆，或者说黑森AI的平台怎么样
        3. AI赛道变化很快如何适应
        4. 你对云端AI 和 边缘AI的看法


------------------04.03 Feb 2025---------------------
could do:
1. threshold inference in training
2. now we are early exit, what if we use late exit?
3. loss function design

problem:
1. resnet50 as classifier not working, no convergence at all

findings:
1. each class has a "cheat" pattern
2. white board image can also generate cheat pattern
3. cheat pattern is, in fact, what the generator learnt from the classifier
4. classifier siginificantly influence the generator's output
5. the generator is actually learning from the classifier
6. a better classifier/feature_extractor, a better generator?

------------------05.03 Feb 2025---------------------
todo:
    0. test vgg white board with resnet50 and alexnet
    1. loss function redesign
    2. threshold inference
    3. late exit
    4. mask control

1. resnet50 cannot classify cat class until exit 2

    - exit 2
    Number of 3s in Original Labels: 539
    Number of 3s in Generated Labels: 640

    negative count: 0 of 512
    positive count: 458 of 512
    maintain count: 54 of 512

    - exit 3
    Number of 3s in Original Labels: 587
    Number of 3s in Generated Labels: 640

    negative count: 0 of 512
    positive count: 458 of 512
    maintain count: 54 of 512

2. both vgg16 and resnet50 are generating a specific pattern for one class

3. add gradcam into generator training process
    - gradcam(gen_img) -> not working
    - gradcam(ori_img) -> should be working

4. sim_loss may need to be removed (or compare the gen with ori, not masked_ori)


------------------07.03 Feb 2025---------------------

1. all class failed.
    - can exit early, but cannot classify correctly
    - good news is, we do find a universal early exit pattern to let the image exit early
    - theoretically, if a classifier can classify the image in an early stage, this finding might be useful
    - "in an early stage", varies from classifier to classifier.
    - for vgg16, is exit 3; for others, tests needed

Reports:
    1. vgg16, resnet50
        vgg16 works, resnet50 not for reasons unkown
        vgg16 results, the generator learnt a unique pattern for each class
        resnet results
        white board test

    2. gradcam in generator training process
        mask used in training to reduce the edge noise (emphasize the important feature)
        gen = generator (mask * ori); label, exit = classifier(gen) -> less edge noise
            &
        gen = generator(ori);  label, exit = classifier(mask * gen) -> no convergence

    3. all class training
        - can exit early, but cannot classify correctly
        - good news is, we do find a universal early exit pattern to let the image exit early
        - theoretically, if a classifier can classify the image in an early stage, this finding might be useful
        - "in an early stage", varies from classifier to classifier.
        - for vgg16, is exit 3; for others, tests needed

        - also, disk is full.

    4. conclusion
        - whatever the generator is fed, it always trying to find a fix pattern that can decreasing the loss function
            - one class, one pattern that looks alike the class
            - multiple class, also just one pattern, but doesnt look like any class to human eyes

        - even if we have the all class generator, e.g. ViT, which can gen correct label and early exit,
            its still essentially insert/replace certain pixels to "cheat" the classifier on early stage
            -> it will still highly

        - there's no guarantee that

    5. Furthur research if willingly
        - try only combine some classes, to see the generated pattern
            similar classes, i.e., cat & dog, car & truck
            different classes, i.e.,  ship & bird



------------------12.03 Feb 2025---------------------

1. binary round mask * images -> generator training
    - train with L1 loss    results not ideal, noises too large
    - train without L1      absolutely not, have to use L1

2. debug test_gen_dataset


------------------13.03 Feb 2025---------------------

new idea:
0. masked_img mostly exit later than original img
    -> the surroundings of an image is important for EE

1. use modified cifar10 dataset to train the generator (masked_img now)
    -> still only learn the fixed cheat pattern

2. train D and G together with masked img
    -> trying now, hard to converge
    - but we can expect gen_imgs only change the masked part

------------------16.03 Feb 2025---------------------

new idea:

1. VAE to search for EE images, then analyze the reason behind

    because: GAN network is hard to train, only changing a part of the image is hard to implement (why? sounds easy)
    therefore: use VAE for only one class; first generate, then search images that can EE

    result: training now.



------------------17.03 Feb 2025---------------------

1. VAE has results, search can be done later

2. GAN not converging, give up


------------------19.03 Feb 2025---------------------

meeting:
    1. results
    2. thesis format
        what should be in thesis
        format, template
        page requirements
        ddl of submission & defense date

possible could-try things:

    1. disable 1st exit, train, see if the pattern changes
        (then 2nd, 3rd, basically you are trying to generate diff layers' features

    2. sample VAE's latent space,

    3. look for pics that match the learnt class pattern, test the EE condition

------------------25.03 2025---------------------
todo:   1. train more epochs only with 1st ext, see if white board test can be more close to a frog -> not clearly
        2. at least first get the fixed pattern for 10 classes
            - 500 EE_loss done      -> too much noise in almost every class
            - 200 EE_loss ing...    -> better in cat




-------------------02.04 2025---------------------

todo:   1. resnet50 10 class pattern
        2. gard-cam dataset, retrain classifiers



-------------------03.06 2025---------------------

1. learn ViT and transformer



--------------------04.06 2025---------------------

1. learn ViT and transformer
2. fine-tune vit 16 on cifar10
    acc on train is 99%, on val is 96%
    acc can be better

ideas:
    since vit 16 model is essentially:  12x transformer blocks, norm, head (linear)
    we can use fewer transformer blocks to build early exit!

--------------------05.06 2025---------------------

1. previous idea works, use fewer transformer blocks to build early exit
    - 3 6 9 as early exit
    - 12 as the main exit

2. found SGD optimizer is working better than adam after loading weights manually onto the ViT_ee

3. training now. classification accuracy sudden drop after around 10 epochs. wondering why.
    - could try:
        1. even smaller lr
        2. drop_out = 0.0
        3.

-------------------06.06 2025---------------------

1. smaller lr works for 20 epochs.



-------------------30.06 2025---------------------

0.

    ViT_CNN_ignore model
        - also recognizes CIFAR10 EE feature
        - can achieve high acc on tiny ImageNet, accuracy: 27.81, 38.88, 59.79, 88.73
        - ready for test with generator


    Resnet50 and VGG16 on CIFAR100
        Resnet50, accuracy: 37.70%, 45.16%, 63.51%, 82.76%
        VGG16, accuracy:   32.32%, 43.32%, 51.56%, 66.42%, 79.32%, 79.45%


1. Generator test with resnet50 on CIFAR100

    sweep LossPara [100, 300, 500] and category [0, ..., 99]
        finished


    based on the current results
        the EE feature in CIFAR100 would suffer from low accuracy and small sample
            - small sample size (500 imgs for each class)
            - no guarantee that 100 features will be found, but at least 50%~60%
            - the features' robustness across models is also uncertain


        what can be done
            - reduce data augmentation, use more mild transformations
            - more epochs and smaller lr
            -


2. Generator test with ViT_CNN_ignore on Tiny ImageNet


---------------------- 02.07 2025 ---------------------

1. tiny imagenet one class data_loader
2. vit_ee tiny imagenet class seems more reasonable, custom dataset class is wrong
3. .class_to_idx function in dataset class may help










---------------------- 04.07 2025 ---------------------

1. debug ViT with Generator

2. Tiny imagenet results seem reliable

3. paper writing




























